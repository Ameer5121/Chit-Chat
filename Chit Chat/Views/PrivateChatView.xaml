<Window x:Class="ChitChat.Views.PrivateChatView"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Converters="clr-namespace:ChitChat.Helper.Converters"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:AttachedProperties="clr-namespace:ChitChat.Helper.AttachedProperties"
             xmlns:local="clr-namespace:ChitChat.Views"
             mc:Ignorable="d" 
             TextElement.Foreground="{DynamicResource Text}"
             Background="{DynamicResource MaterialDesignDarkBackground}"
             TextElement.FontWeight="Medium"
             TextElement.FontSize="14"
             FontFamily="{materialDesign:MaterialDesignFont}"
             Width="678" 
             Height="525"
             WindowStartupLocation="CenterScreen"
             WindowStyle="None"
             ResizeMode="NoResize">
    <Window.Resources>
        <System:Boolean x:Key="TrueValue">True</System:Boolean>
        <Converters:CharacterCountConverter x:Key="CharacterCountConverter"></Converters:CharacterCountConverter>
        <Converters:LessThanZeroConverter x:Key="LessThanZeroConverter"></Converters:LessThanZeroConverter>
    </Window.Resources>
    <Grid MouseDown="Grid_MouseDown">
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <!--Black Border & Exit Button-->
        <Border Background="{DynamicResource WindowBorder}" Grid.Row="0" Grid.ColumnSpan="2">
            <DockPanel LastChildFill="False">
                <Button BorderBrush="Transparent" Style="{StaticResource ExitButton}" Command="{Binding PrivateChatExitCommand}"
                        Click="OnExitClick"
                        Width="25" DockPanel.Dock="Right">
                    <Image Source="/Resources/Exit.png" Height="25" Width="25"></Image>
                </Button>
                <DockPanel LastChildFill="False" Margin="0,0,0,0">
                    <TextBlock FontSize="15" Width="Auto" VerticalAlignment="Center" Margin="0,0,0,0" Foreground="{DynamicResource Text}" Text="{DynamicResource PrivatelyChattingDefault}">
                    </TextBlock>
                    <TextBlock FontSize="15" Width="Auto" VerticalAlignment="Center" Margin="5,0,10,0" Foreground="{DynamicResource Text2}" Text="{Binding SelectedUser.DisplayName}">
                    </TextBlock>
                </DockPanel>
                <Button  Background="{DynamicResource Buttons}"
                         BorderBrush="{StaticResource ButtonsBorderBrush}"     
                         DockPanel.Dock="Left"
                         VerticalAlignment="Center"
                         Margin="0,0,5,0"
                         Command="{Binding GetPreviousPrivateMessagesCommand}"
                         Content="{DynamicResource LoadPreviousMessagesDefault}"
                         Foreground="{DynamicResource Text2}"></Button>
            </DockPanel>
        </Border>

        <!--Message Window-->
        <ListBox x:Name="PrivateChat"
                  Background="{DynamicResource PrivateChat}" 
                  Grid.ColumnSpan="2"
                  Grid.Row="1"
                  ItemsSource="{Binding PrivateMessages}" 
                  VirtualizingStackPanel.IsVirtualizing="False"
                  AttachedProperties:ScrollBehavior.ScrollOnNewItem="True">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel VerticalAlignment="Bottom"/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <DockPanel>
                        <Ellipse Height="35" Width="35" DockPanel.Dock="Left">
                            <Ellipse.Fill>
                                <ImageBrush ImageSource="{Binding Sender.ProfilePicture}" RenderOptions.BitmapScalingMode="HighQuality"></ImageBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <TextBlock DockPanel.Dock="Top" Margin="10,0,0,0">                              
                            <Run Text="{Binding Sender.DisplayName}" Foreground="{DynamicResource ChatDisplayName}"></Run>
                            <Run Text=""></Run>
                            <Run Text="{Binding MessageDate, StringFormat=t}" Foreground="Gray" FontSize="10"></Run>
                        </TextBlock>

                        <FlowDocumentScrollViewer  DockPanel.Dock="Left" Document="{Binding Message}" 
                                                      HorizontalAlignment="Left" Height="Auto" 
                                                      ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                                      HorizontalContentAlignment="Left" Margin="0,0,0,-1"
                                                      Padding="-10"></FlowDocumentScrollViewer>
                    </DockPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <Border Grid.Row="2" Grid.Column="2" Background="{DynamicResource TextBox}"></Border>
        <DockPanel Grid.Row="2" Background="{DynamicResource TextBox}" >
            <materialDesign:PopupBox Margin="0,4,0,0" DockPanel.Dock="Left" VerticalAlignment="Top" PlacementMode="TopAndAlignCentres" HorizontalAlignment="Right">
                <DockPanel LastChildFill="False">
                    <materialDesign:PackIcon Kind="Upload" DockPanel.Dock="Left" VerticalAlignment="Center" Width="25" Height="25"></materialDesign:PackIcon>
                    <Button Margin="10,0,0,0" Command="{Binding ChooseImageCommand}" CommandParameter="{StaticResource TrueValue}" Content="Upload a Picture" Padding="0" Width="150" VerticalContentAlignment="Center" Background="{DynamicResource Buttons}" Foreground="{DynamicResource Text}" HorizontalContentAlignment="Left" HorizontalAlignment="Left"></Button>
                </DockPanel>
            </materialDesign:PopupBox>
            <RichTextBox 
                     x:Name="PrivateChatTextBox"
                     TextChanged="PrivateChatTextBox_TextChanged"
                     DockPanel.Dock="Left"
                     Background="Transparent"
                     FontSize="15"
                     Height="Auto" 
                     Width="Auto"
                     MaxHeight="200"
                     CaretBrush="White"
                     VerticalContentAlignment="Center"
                     materialDesign:TextFieldAssist.UnderlineBrush="AliceBlue">
                <RichTextBox.InputBindings>
                    <KeyBinding CommandParameter="{Binding SelectedUser}" Command="{Binding ConstructPrivateMessageCommand}" Key="Enter" />
                </RichTextBox.InputBindings>
                <materialDesign:HintAssist.Hint>
                    <TextBlock Foreground="{DynamicResource Text}" Margin="5,0,0,0">Message</TextBlock>
                </materialDesign:HintAssist.Hint>
            </RichTextBox>
        </DockPanel>

        <Button Background="Transparent" BorderBrush="Transparent" Width="36" VerticalAlignment="Top" HorizontalAlignment="Right" Click="Emoji_Click" Height="Auto" Padding="0" Grid.Row="2" Grid.Column="1">
            <Image Source="/Resources/Emojis/Smile.png" Height="33" Width="31"/>
        </Button>

        <TextBlock HorizontalAlignment="Right" VerticalAlignment="Bottom" Grid.Column="1" Grid.Row="2" Foreground="Red">
            <TextBlock.Text>
                <MultiBinding Converter="{StaticResource CharacterCountConverter}">
                    <Binding Path="CharacterLimit"></Binding>
                    <Binding Path="PrivateMessageLength"></Binding>
                </MultiBinding>
            </TextBlock.Text>
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="True">
                                    <Condition.Binding>
                                        <MultiBinding Converter="{StaticResource LessThanZeroConverter}">
                                            <Binding Path="CharacterLimit" />
                                            <Binding Path="PrivateMessageLength" />
                                        </MultiBinding>
                                    </Condition.Binding>
                                </Condition>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Visibility" Value="Visible"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="False">
                                    <Condition.Binding>
                                        <MultiBinding Converter="{StaticResource LessThanZeroConverter}">
                                            <Binding Path="CharacterLimit" />
                                            <Binding Path="PrivateMessageLength" />
                                        </MultiBinding>
                                    </Condition.Binding>
                                </Condition>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>

        <!--Emoji Window-->
        <materialDesign:Transitioner x:Name="EmojiTransitioner" Grid.Row="1" Grid.ColumnSpan="2" SelectedIndex="1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Height="333" Width="408" Margin="0,0,0,10">
            <materialDesign:TransitionerSlide OpeningEffect="{materialDesign:TransitionEffect Kind=ExpandIn}">
                <local:EmojiView Margin="0,0,0,-1"></local:EmojiView>
            </materialDesign:TransitionerSlide>
            <materialDesign:TransitionerSlide OpeningEffect="{materialDesign:TransitionEffect Kind=SlideInFromBottom}">

            </materialDesign:TransitionerSlide>
        </materialDesign:Transitioner>

        

    </Grid>
</Window>
