<Window x:Class="ChitChat.Views.ChatView"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ChitChat.Views"
        xmlns:Converters="clr-namespace:ChitChat.Helper.Converters"
        xmlns:model="clr-namespace:ChitChat.Models"
        xmlns:AttachedProperties="clr-namespace:ChitChat.Helper.AttachedProperties"
        mc:Ignorable="d"
        Title="ChatView" 
        Height="821.5" 
        Width="1281" 
        WindowStyle="None"
        WindowStartupLocation="CenterScreen" 
        MouseDown="Window_MouseDown"
        TextElement.Foreground="{DynamicResource Text}"
        Background="{DynamicResource DefaultWindowTheme}"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        FontFamily="{materialDesign:MaterialDesignFont}"
        ResizeMode="NoResize">


    <Window.Resources>
        <Converters:IsEnabledConverter x:Key="IsEnabledConverter"></Converters:IsEnabledConverter>
        <Converters:LessThanZeroConverter x:Key="LessThanZeroConverter"></Converters:LessThanZeroConverter>
        <Converters:CharacterCountConverter x:Key="CharacterCountConverter"></Converters:CharacterCountConverter>

        <DataTemplate DataType="{x:Type model:ErrorModel}">
            <Grid Background="{DynamicResource Menu}" Width="400" Height="150">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Text="{Binding ErrorSubject}" Grid.ColumnSpan="2" Foreground="{DynamicResource Text}" TextAlignment="Center" VerticalAlignment="Center"  FontSize="18" Width="Auto" HorizontalAlignment="Center" />
                <TextBlock Grid.Row="1" Text="{Binding ErrorMessage}" TextWrapping="Wrap" Grid.ColumnSpan="2" Foreground="{DynamicResource Text2}" TextAlignment="Center" VerticalAlignment="Center"  FontSize="18" Width="Auto" HorizontalAlignment="Center" />
                <Button Focusable="False" Background="{DynamicResource Buttons}" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" Grid.Row="2" BorderBrush="Transparent" Height="50" VerticalAlignment="Bottom" Content="Okay" Foreground="{DynamicResource Text}" FontSize="15"></Button>
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type model:NameChangeModel}">
            <Grid Background="{DynamicResource Menu}" Width="400" Height="200">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <TextBlock HorizontalAlignment="Center"
                           Grid.ColumnSpan="2"
                           Foreground="{DynamicResource Text}"
                           FontSize="20"
                           Text="Change Display Name"></TextBlock>
                
                <TextBox Grid.Row="1"
                         VerticalAlignment="Center"
                         FontSize="20"
                         Width="200"
                         HorizontalAlignment="Right"
                         materialDesign:HintAssist.Hint="New Name"
                         Foreground="{DynamicResource Text}"
                         materialDesign:HintAssist.Foreground="{DynamicResource Text}"
                         Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                         materialDesign:TextFieldAssist.UnderlineBrush="{DynamicResource DefaultUnderLineBrush}" Text="{Binding NewName}"></TextBox>
                <Button Grid.Row="1" 
                        Grid.Column="1" 
                        HorizontalAlignment="Left"
                        Width="150"
                        Height="35"
                        Content="Apply"
                        Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.ChangeDisplayNameCommand}"
                        CommandParameter="{Binding}"
                        Background="{DynamicResource Buttons}"
                        Foreground="{DynamicResource Text}"
                        BorderBrush="Transparent"
                        Margin="10,20,0,0"></Button>
               
                <Button Grid.Row="2" 
                        Grid.ColumnSpan="2" 
                        HorizontalAlignment="Center"
                        VerticalAlignment="Bottom"
                        Width="200"
                        Height="35"
                        Content="Close" 
                        Background="{DynamicResource Buttons}"
                        Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                        Foreground="Red"
                        BorderBrush="Transparent"
                        Margin="10,20,0,0"></Button>
            </Grid>
        </DataTemplate>
    </Window.Resources>

    <materialDesign:DialogHost CloseOnClickAway="False" Identifier="ChatDialog">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="270"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>


            <!--Black Border & Exit Button-->
            <Border Background="{DynamicResource WindowBorder}" Grid.Row="0" Grid.ColumnSpan="2">
                <DockPanel LastChildFill="False">
                    <Button BorderBrush="Transparent" Style="{StaticResource ExitButton}" DockPanel.Dock="Right" Click="Exit_Click" Cursor="Hand" Width="54">
                        <Image Source="/Resources/Exit.png" Height="41" Width="49"></Image>
                    </Button>
                </DockPanel>
            </Border>


            <Grid Background="Transparent" Grid.Row="1" Margin="0,0,0,113" Grid.RowSpan="2">

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <!--Main Expander-->
                <Expander FlowDirection="RightToLeft" Grid.Column="0" Grid.Row="1" Background="{DynamicResource Menu}" Foreground="{DynamicResource ExpanderButton}" IsExpanded="True" Margin="0,0,0,658">
                    <Expander.Header>
                        <DockPanel FlowDirection="LeftToRight" Height="30">
                            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="Menu" Height="34" Width="29" Foreground="{DynamicResource Icons}"></materialDesign:PackIcon>
                                <TextBlock Text="Menu" Style="{StaticResource MaterialDesignBody1TextBlock}" Width="74" FontSize="20" TextAlignment="Center" VerticalAlignment="Center" Margin="0,2,0,1" Foreground="{DynamicResource Text}"></TextBlock>
                            </StackPanel>
                        </DockPanel>
                    </Expander.Header>

                    <StackPanel>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>
                            </Grid.RowDefinitions>
                            <!--User Expander-->
                            <Expander Margin="0,20" Background="{DynamicResource MenuOptions}" IsExpanded="True" >
                                <Expander.Header>
                                    <DockPanel FlowDirection="LeftToRight">
                                        <materialDesign:PackIcon Kind="People" Height="30" Width="33" Foreground="{DynamicResource Icons}"></materialDesign:PackIcon>
                                        <TextBlock Text="Users" FontSize="20" Style="{StaticResource MaterialDesignHeadline4TextBlock}" Foreground="{DynamicResource Text}" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Left" Width="59"></TextBlock>
                                    </DockPanel>
                                </Expander.Header>

                                <ListBox x:Name="Users" ItemsSource="{Binding Users}" HorizontalContentAlignment="Stretch" 
                                      IsEnabled="{Binding ControlsEnabled}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <DockPanel LastChildFill="False" FlowDirection="LeftToRight">
                                                <Ellipse Height="35" Width="35" DockPanel.Dock="Left">
                                                    <Ellipse.Fill>
                                                        <ImageBrush ImageSource="{Binding ProfilePicture}" RenderOptions.BitmapScalingMode="HighQuality"></ImageBrush>
                                                    </Ellipse.Fill>
                                                </Ellipse>
                                                <TextBlock Text="{Binding DisplayName}" DockPanel.Dock="Left" VerticalAlignment="Center" Margin="10,0,0,0" Foreground="{DynamicResource Text}"></TextBlock>

                                                <materialDesign:PopupBox DockPanel.Dock="Right" VerticalAlignment="Center"
                                                                     Foreground="{DynamicResource ExpanderButton}">

                                                    <Button Width="120" Content="Private Chat" Click="PrivateChat_Click" Background="{DynamicResource Buttons}"
                                                        Foreground="{DynamicResource Text}"
                                                        Command="{Binding DataContext.OnPrivateChatEnter, ElementName=Users}" CommandParameter="{Binding}">
                                                        <Button.IsEnabled>
                                                            <MultiBinding Converter="{StaticResource IsEnabledConverter}">
                                                                <Binding Path="DataContext.CurrentUser" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ListBox}"/>
                                                                <Binding Path="DisplayName"></Binding>
                                                            </MultiBinding>
                                                        </Button.IsEnabled>
                                                    </Button>
                                                </materialDesign:PopupBox>

                                            </DockPanel>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>

                                </ListBox>

                            </Expander>
                        </Grid>

                        <Grid Margin="0,-20">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>
                            </Grid.RowDefinitions>
                            <!--Options Expander-->
                            <Expander Margin="0,20" Background="{DynamicResource MenuOptions}" IsExpanded="True">
                                <Expander.Header>
                                    <DockPanel FlowDirection="LeftToRight">
                                        <materialDesign:PackIcon Kind="Settings" Height="30" Width="33" Foreground="{DynamicResource Icons}"></materialDesign:PackIcon>
                                        <TextBlock Text="User Settings" FontSize="20" Style="{StaticResource MaterialDesignHeadline4TextBlock}" Foreground="{DynamicResource Text}" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Left" Width="Auto"></TextBlock>
                                    </DockPanel>
                                </Expander.Header>

                                <Grid FlowDirection="LeftToRight">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="35"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>

                                    <DockPanel LastChildFill="False" Grid.Column="1" HorizontalAlignment="Center">
                                        <materialDesign:PackIcon Kind="AccountSettings" Width="20" Height="20" Grid.Row="0" VerticalAlignment="Center" DockPanel.Dock="Left"></materialDesign:PackIcon>
                                        <TextBlock Text="Account" VerticalAlignment="Center"  TextAlignment="Left" Grid.Column="2" HorizontalAlignment="Left"></TextBlock>
                                    </DockPanel>

                                    <Border Background="Gray" Width="60" Height="1" Margin="10,0,0,0" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left"></Border>
                                    <Border Background="Gray" Width="60" Height="1" Margin="0,0,10,0" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Right"></Border>

                                    <DockPanel LastChildFill="False" Grid.Column="1" Grid.Row="3" HorizontalAlignment="Center">
                                        <materialDesign:PackIcon Kind="ThemeOutline" Width="20" Height="20" Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Right"></materialDesign:PackIcon>
                                        <TextBlock Text="Appearance" VerticalAlignment="Center" TextAlignment="Left" Grid.Column="2" HorizontalAlignment="Left"></TextBlock>
                                    </DockPanel>

                                    <Border Background="Gray" Width="60" Height="1" Margin="10,0,0,0" Grid.Row="3" Grid.Column="0" HorizontalAlignment="Left"></Border>
                                    <Border Background="Gray" Width="60" Height="1" Margin="0,0,10,0" Grid.Row="3" Grid.Column="0" HorizontalAlignment="Right"></Border>

                                    <DockPanel LastChildFill="False" Grid.Column="1" Grid.Row="5" HorizontalAlignment="Center">
                                        <materialDesign:PackIcon Kind="Application" Width="20" Height="20" Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Right"></materialDesign:PackIcon>
                                        <TextBlock Text="Application" VerticalAlignment="Center" TextAlignment="Left" Grid.Column="2" HorizontalAlignment="Left"></TextBlock>
                                    </DockPanel>

                                    <Border Background="Gray" Width="60" Height="1" Margin="10,0,0,0" Grid.Row="5" Grid.Column="0" HorizontalAlignment="Left"></Border>
                                    <Border Background="Gray" Width="60" Height="1" Margin="0,0,10,0" Grid.Row="5" Grid.Column="0" HorizontalAlignment="Right"></Border>

                                    <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.ColumnSpan="2">
                                        <Button Foreground="Silver"    
                                   Margin="0,10,0,10"
                                 Width="Auto"
                                HorizontalAlignment="Left"
                               Background="{DynamicResource Buttons}"
                               BorderBrush="{DynamicResource ButtonsBorderBrush}"                              
                               Command="{Binding ChooseProfilePictureCommand}">
                                            <StackPanel Orientation="Horizontal" Width="Auto" Height="28">
                                                <materialDesign:PackIcon Kind="FaceProfile" Width="22" Height="18" Margin="0,5,0,0" Foreground="Gray"/>
                                                <TextBlock Text="Change Profile Picture" 
                                               Foreground="{DynamicResource Text2}"
                                               TextAlignment="Center" Height="18" Width="Auto"/>
                                            </StackPanel>
                                            <Button.Style>
                                                <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsUploading}" Value="True">
                                                            <Setter Property="IsEnabled" Value="False"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsUploading}" Value="False">
                                                            <Setter Property="IsEnabled" Value="True"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                        <ProgressBar 
                                         Margin="10,0,0,0"
                                     Value="0"
                                     IsIndeterminate="True" 
                                     Foreground="Silver" 
                                    Height="24"
                                    Width="26">
                                            <ProgressBar.Style>
                                                <Style TargetType="ProgressBar" BasedOn="{StaticResource MaterialDesignCircularProgressBar}">
                                                    <Setter Property="Visibility" Value="Visible"></Setter>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsUploading}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsUploading}" Value="False">
                                                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ProgressBar.Style>
                                        </ProgressBar>
                                    </StackPanel>

                                    <StackPanel Grid.Row="2" Orientation="Horizontal">
                                        <Button Foreground="Silver"    
                                   Margin="0,10,0,10"
                                 Grid.Row="2"
                                 Width="Auto"
                                HorizontalAlignment="Left"
                               Background="{DynamicResource Buttons}"
                               BorderBrush="{DynamicResource ButtonsBorderBrush}"                              
                               Command="{Binding ShowNameChangerDialogCommand}">
                                            <StackPanel Orientation="Horizontal" Width="Auto" Height="28">
                                                <materialDesign:PackIcon Kind="User" Width="22" Height="18" Margin="0,5,0,0" Foreground="Gray"/>
                                                <TextBlock Text="Change Display Name" 
                                               Foreground="{DynamicResource Text2}"
                                               TextAlignment="Center" Height="18" Width="Auto"/>
                                            </StackPanel>
                                            <Button.Style>
                                                <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding UpdatingName}" Value="True">
                                                            <Setter Property="IsEnabled" Value="False"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding UpdatingName}" Value="False">
                                                            <Setter Property="IsEnabled" Value="True"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                        <ProgressBar 
                                         Margin="10,0,0,0"
                                     Value="0"
                                     IsIndeterminate="True" 
                                     Foreground="Silver" 
                                    Height="24"
                                    Width="26">
                                            <ProgressBar.Style>
                                                <Style TargetType="ProgressBar" BasedOn="{StaticResource MaterialDesignCircularProgressBar}">
                                                    <Setter Property="Visibility" Value="Visible"></Setter>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding UpdatingName}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding UpdatingName}" Value="False">
                                                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ProgressBar.Style>
                                        </ProgressBar>
                                    </StackPanel>
                                    

                                    <materialDesign:Card Grid.Row="4" Grid.ColumnSpan="2"
                                                         Margin="0,10,0,10"
                                          HorizontalAlignment="Left"
                                          Background="{DynamicResource Buttons}"
                                          Width="150"
                                          Height="32">
                                        <ComboBox Template="{StaticResource MaterialDesignDataGridComboBoxTemplate}"
                                          ItemsSource="{Binding Themes}"
                                          SelectedItem="{Binding CurrentTheme, Mode=TwoWay}"
                                          materialDesign:TextFieldAssist.UnderlineBrush="{DynamicResource DefaultUnderLineBrush}"
                                          Foreground="{DynamicResource Text}"
                                          BorderBrush="{DynamicResource ButtonsBorderBrush}">
                                            <materialDesign:HintAssist.Hint>
                                                <TextBlock Foreground="{DynamicResource Text}">Theme</TextBlock>
                                            </materialDesign:HintAssist.Hint>
                                            <ComboBox.ItemContainerStyle>
                                                <Style TargetType="ComboBoxItem" BasedOn="{StaticResource MaterialDesignComboBoxItemStyle}" >
                                                    <Setter Property="Background" Value="{DynamicResource DefaultSubWindowTheme}"></Setter>
                                                    <Setter Property="Width" Value="140"></Setter>
                                                </Style>
                                            </ComboBox.ItemContainerStyle>
                                        </ComboBox>
                                    </materialDesign:Card>


                                    <Button Foreground="Red" Grid.Row="6" Grid.ColumnSpan="2"                               
                                 DockPanel.Dock="Left"
                                 
                               Background="{DynamicResource Buttons}"
                               BorderBrush="{DynamicResource ButtonsBorderBrush}"
                               Margin="0,10,120,10"
                               Command="{Binding DisconnectCommand}">
                                        <StackPanel Orientation="Horizontal" Width="121" Height="28">
                                            <materialDesign:PackIcon Kind="Logout" Width="22" Height="18" Margin="0,5,0,0"/>
                                            <TextBlock Text="Log Out" 
                                               Foreground="Red"
                                               TextAlignment="Center" Height="18" Margin="0,5" Width="55"/>
                                        </StackPanel>
                                    </Button>

                                </Grid>
                            </Expander>
                        </Grid>
                    </StackPanel>
                </Expander>
            </Grid>


            <materialDesign:Card UniformCornerRadius="5" Margin="10,1,0,3" Grid.Column="1" Grid.Row="1" Background="{DynamicResource MessageHistoryBorder}">
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon Kind="Chat" Height="48" Foreground="{StaticResource MaterialDesignLightSeparatorBackground}" Width="57"></materialDesign:PackIcon>
                    <TextBlock Width="116" Text="Message History" VerticalAlignment="Center" Foreground="{DynamicResource Text}"></TextBlock>
                </StackPanel>
            </materialDesign:Card>
            <materialDesign:Card  Grid.Column="1" Grid.Row="2" Background="{DynamicResource Chat}" UniformCornerRadius="5" Grid.RowSpan="2" Margin="10,0,0,0">
                <ListBox Grid.Column="1" 
                  Background="Transparent" 
                  Grid.Row="1"                   
                  Grid.RowSpan="2"
                  ItemsSource="{Binding PublicMessages}"                  
                  Margin="0,10,0,57"
                  VirtualizingStackPanel.IsVirtualizing="False"
                 RenderTransformOrigin="0.5,0.5" AttachedProperties:ScrollBehavior.ScrollOnNewItem="True">
                   
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel VerticalAlignment="Bottom"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <DockPanel LastChildFill="False">
                                <Ellipse Height="35" Width="35" DockPanel.Dock="Left">
                                    <Ellipse.Fill>
                                        <ImageBrush ImageSource="{Binding User.ProfilePicture}" RenderOptions.BitmapScalingMode="HighQuality"></ImageBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <TextBlock DockPanel.Dock="Top" Margin="10,0,0,0">
                            <Run Text="{Binding User.DisplayName}" Foreground="{DynamicResource DefaultChatDisplayName}"></Run>
                            <Run Text=""></Run>
                            <Run Text="{Binding MessageDate, StringFormat=t}" Foreground="Gray" FontSize="10"></Run>
                                </TextBlock>
                                <FlowDocumentScrollViewer DockPanel.Dock="Left" Document="{Binding Message}" 
                                                      HorizontalAlignment="Left" Height="Auto" 
                                                      ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                                      HorizontalContentAlignment="Left" Margin="2,0,0,0"
                                                      Padding="-10"></FlowDocumentScrollViewer>
                            </DockPanel>

                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </materialDesign:Card>

            <!--Public chat textbox-->
            <materialDesign:Card 
            UniformCornerRadius="5"
            Grid.Row="3" 
            Grid.Column="1"
            Background="{DynamicResource DefaultTextBoxTheme}"
            Margin="20,15,10,15">
                <DockPanel LastChildFill="False">
                    <RichTextBox DockPanel.Dock="Left" x:Name="PublicChatTextBox" 
                     AcceptsReturn="True"                   
                     FontSize="15" 
                     Width="929"
                     Height="Auto"
                     TextChanged="PublicChatTextBox_TextChanged"
                     BorderBrush="{DynamicResource TextBoxBorderBrush}"
                     Background="Transparent"
                     MaxHeight="200"
                     IsEnabled="{Binding ControlsEnabled}"
                     VerticalContentAlignment="Center"
                     CaretBrush="White"
                     materialDesign:TextFieldAssist.UnderlineBrush="AliceBlue">
                        <RichTextBox.InputBindings>
                            <KeyBinding Command="{Binding ConstructPublicMessageCommand}" Key="Enter"></KeyBinding>
                        </RichTextBox.InputBindings>
                        <materialDesign:HintAssist.Hint>
                            <TextBlock Foreground="{DynamicResource Text}">Message</TextBlock>
                        </materialDesign:HintAssist.Hint>
                    </RichTextBox>
                    <TextBlock DockPanel.Dock="Bottom" HorizontalAlignment="Right" Foreground="Red">
                        <TextBlock.Text>
                            <MultiBinding Converter="{StaticResource CharacterCountConverter}">
                                <Binding Path="CharacterLimit"></Binding>
                                <Binding Path="PublicMessageLength"></Binding>
                            </MultiBinding>
                        </TextBlock.Text>
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Value="True">
                                                <Condition.Binding>
                                                    <MultiBinding Converter="{StaticResource LessThanZeroConverter}">
                                                        <Binding Path="CharacterLimit" />
                                                        <Binding Path="PublicMessageLength" />
                                                    </MultiBinding>
                                                </Condition.Binding>
                                            </Condition>
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Value="False">
                                                <Condition.Binding>
                                                    <MultiBinding Converter="{StaticResource LessThanZeroConverter}">
                                                        <Binding Path="CharacterLimit" />
                                                        <Binding Path="PublicMessageLength" />
                                                    </MultiBinding>
                                                </Condition.Binding>
                                            </Condition>
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <Button Background="Transparent" BorderBrush="Transparent" DockPanel.Dock="Right" VerticalAlignment="Top" Width="36" Click="Emoji_Click" Height="33" Padding="0" IsEnabled="{Binding ControlsEnabled}">
                        <Image Source="/Resources/Emojis/Smile.png" Height="33" Width="31"/>
                    </Button>
                </DockPanel>
            </materialDesign:Card>


            <!--Emoji Window-->
            <materialDesign:Transitioner x:Name="EmojiTransitioner" Grid.Row="2" Grid.Column="1"  SelectedIndex="1" Margin="600,331,0,50" Width="408" Height="333" Grid.RowSpan="2">
                <materialDesign:TransitionerSlide OpeningEffect="{materialDesign:TransitionEffect Kind=ExpandIn}">
                    <local:EmojiView Margin="0,0,0,0"></local:EmojiView>
                </materialDesign:TransitionerSlide>
                <materialDesign:TransitionerSlide OpeningEffect="{materialDesign:TransitionEffect Kind=SlideInFromBottom}">

                </materialDesign:TransitionerSlide>
            </materialDesign:Transitioner>

            <!--Private Chat Window-->
            <materialDesign:Transitioner x:Name="PrivateChatTransitioner" Grid.Row="2" Grid.Column="1" Panel.ZIndex="1" SelectedIndex="1" Width="678" Height="525" Margin="171,71,159,70">
                <materialDesign:TransitionerSlide OpeningEffect="{materialDesign:TransitionEffect Kind=ExpandIn}">
                    <local:PrivateChatView Margin="0,0,0,-1"></local:PrivateChatView>
                </materialDesign:TransitionerSlide>
                <materialDesign:TransitionerSlide OpeningEffect="{materialDesign:TransitionEffect Kind=SlideInFromBottom}">

                </materialDesign:TransitionerSlide>
            </materialDesign:Transitioner>


        </Grid>
    </materialDesign:DialogHost>
   
</Window>
